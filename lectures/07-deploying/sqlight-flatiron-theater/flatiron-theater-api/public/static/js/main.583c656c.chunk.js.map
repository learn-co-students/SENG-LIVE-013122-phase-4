{"version":3,"sources":["components/ProductionCard.js","components/ProductionContainer.js","components/ProductionForm.js","components/Navigation.js","components/ProductionDetail.js","components/Auth.js","components/LogIn.js","components/App.js","index.js"],"names":["ProductionCard","production","title","budget","genre","image","id","console","log","to","className","style","width","src","ProductionContainer","productions","map","ProductionForm","handlePost","errors","useState","director","description","formData","setFormData","e","onSubmit","preventDefault","ongoing","type","name","value","onChange","target","rows","cols","Navigation","cart","setIsAuthenticated","setUser","user","onClick","fetch","method","then","admin","ProductionDetail","setCart","crew_members","performers_and_roles","setProduction","params","useParams","useEffect","res","json","data","Auth","username","setUsername","email","setEmail","password","setPassword","setErrors","headers","body","JSON","stringify","Object","entries","Login","error","setError","useHistory","ok","App","setProductions","isAuthenticated","exact","path","obj","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.583c656c.chunk.js","sourcesContent":["import {Link} from \"react-router-dom\";\n\nfunction ProductionCard({production}) {\n    const {title, budget, genre, image, id} = production\n    console.log(production)\n    return (\n      <Link to={`/productions/${id}`}>\n      <tr className=\"table-row\" >\n       <td>{title}</td>\n       <td>{genre}</td>\n       <td>$ {budget}</td>\n       <td><img style={{width:'100px'}} src={image}/></td>\n      </tr>\n      </Link>\n    );\n  }\n  \n  export default ProductionCard;","import ProductionCard from './ProductionCard'\n\n\nfunction ProductionContainer({productions}) {\n    return (\n     <div>\n         <table>{productions.map(production => <ProductionCard  key={production.id} production={production} />)}</table>\n     </div>\n    );\n  }\n  \n  export default ProductionContainer;","import React, { useState} from 'react'\n\nfunction ProductionForm({handlePost, errors}) {\n  const [formData, setFormData] = useState({\n    title:'',\n    genre:'',\n    budget:'',\n    image:'',\n    director:'',\n    description:''\n  })\n\n\n  function onSubmit(e){\n    e.preventDefault()\n    const production = {\n      title: formData.title,\n      genre: formData.genre,\n      budget: formData.budget,\n      image: formData.image,\n      director: formData.director,\n      description: formData.description,\n      ongoing:true\n    }\n    console.log(production)\n    handlePost(production)\n  }\n    return (\n      <div className=\"App\">\n        {errors?errors.map(e => <div>{e}</div>):null}\n       <form onSubmit={onSubmit}>\n       <label>\n          Title\n          <input type=\"text\" name=\"title\" value={formData.title} onChange={(e) => setFormData({...formData, [e.target.name]:e.target.value})} />\n        </label>\n        <br/>\n        <label>\n        Genre\n          <input type=\"text\" name=\"genre\" value={formData.genre} onChange={(e) => setFormData({...formData, [e.target.name]:e.target.value})} />\n        </label>\n        <br/>\n        <label>\n        Budget\n          <input type=\"number\" name=\"budget\" value={formData.budget} onChange={(e) => setFormData({...formData, [e.target.name]:e.target.value})} />\n        </label>\n        <br/>\n        <label>\n        Image\n          <input type=\"text\" name=\"image\" value={formData.image} onChange={(e) => setFormData({...formData, [e.target.name]:e.target.value})} />\n        </label>\n        <br/>\n        <label>\n        Director\n          <input type=\"text\" name=\"director\" value={formData.director} onChange={(e) => setFormData({...formData, [e.target.name]:e.target.value})} />\n        </label>\n        <br/>\n        <label>\n        Description\n          <textarea type=\"text\" name=\"description\" rows=\"4\" cols=\"50\" value={formData.description} onChange={(e) => setFormData({...formData, [e.target.name]:e.target.value})} />\n        </label>\n        <br/>\n        <input type=\"submit\" value=\"Submit Production\" />\n       </form>\n      </div>\n    );\n  }\n  \n  export default ProductionForm;","import {Link} from \"react-router-dom\";\n\nfunction Navigation({cart, setIsAuthenticated, setUser, user}) {\n    console.log(user)\n    const logout = () => {\n        fetch('/logout',{\n            method:'DELETE'\n        })\n        .then(()=>{\n            setIsAuthenticated(false)\n            setUser(null)\n        })\n    }\n    return (\n        <> \n   \n         <h1>Flatiron Theater Company</h1>\n         <div>\n            <button onClick={logout}>Logout</button>\n           <h1><Link to=\"/\"> Home</Link></h1>\n           {user&&user.admin?<h1><Link to=\"/productions/new\">New Production</Link></h1>:null}\n\n         </div>\n\n        </>\n    )\n}\n\nexport default Navigation;","import { useParams } from \"react-router-dom\";\nimport {useEffect, useState} from 'react'\nfunction ProductionDetail({cart, setCart}) {\nconst [production, setProduction] = useState({crew_members:[], performers_and_roles:[]})\n  const params = useParams();\n  useEffect(()=>{\n    fetch(`/productions/${params.id}`)\n    .then(res => res.json())\n    .then(data => {\n      console.log(data)\n      setProduction(data)\n    })\n  },[])\n  \n \n\n    const {title, budget, genre, image,description, crew_members, performers_and_roles} = production\n    return (\n      <div className=\"card\" >\n      <h1>{title}</h1>\n       <h3>{genre}</h3>\n       <h3>{budget}</h3>\n       <img style={{width:'100px'}} src={image}/>\n       <p>{description}</p>\n       <button >Buy Ticket</button>\n      </div>\n    );\n  }\n  \n  export default ProductionDetail;","import React, {useState} from 'react'\n\nfunction Auth() {\n    const [username, setUsername] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n   \n    const [errors, setErrors] = useState([])\n\n    function onSubmit(e){\n        e.preventDefault()\n        const user = {\n            name: username,\n            email,\n            password\n        }\n       \n        fetch(`/users`,{\n          method:'POST',\n          headers:{'Content-Type': 'application/json'},\n          body:JSON.stringify(user)\n        })\n        .then(res => res.json())\n        .then(json => {\n            console.log(json)\n            if(json.errors) setErrors(Object.entries(json.errors))\n        })\n    }\n    return (\n        <> \n        <h1>Sign UP</h1>\n        <form onSubmit={onSubmit}>\n        <label>\n          Username\n   \n          <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} />\n        </label>\n        <label>\n         email\n    \n        <input type=\"text\" value={email} onChange={(e) => setEmail(e.target.value)} />\n        </label>\n        <label>\n         Password\n    \n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n        </label>\n       \n        <input type=\"submit\" value=\"Sign up!\" />\n      </form>\n      {errors?errors.map(e => <div>{e[0]+': ' + e[1]}</div>):null}\n        </>\n    )\n}\n\nexport default Auth;\n","import React, {useState} from 'react'\nimport Auth from './Auth'\nimport { useHistory } from \"react-router-dom\";\n\n\nfunction Login({setUser,setIsAuthenticated}) {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n   \n    const [error, setError] = useState([])\n    let history = useHistory();\n\n    function onSubmit(e){\n        e.preventDefault()\n        const user = {\n            username: username,\n            password\n        }\n       \n        fetch(`/login`,{\n          method:'POST',\n          headers:{'Content-Type': 'application/json'},\n          body:JSON.stringify(user)\n        })\n        .then(res => {\n          if(res.ok){\n            res.json()\n            .then(user=>{\n              setUser(user)\n              setIsAuthenticated(true)\n            })\n            \n          } else {\n            res.json()\n            .then(json => setError(json.error))\n          }\n        })\n    }\n    return (\n      \n        <> \n        <h1>Flatiron Theater Company</h1>\n        <h1>Login</h1>\n        <form onSubmit={onSubmit}>\n        <label>\n          Username\n   \n          <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} />\n        </label>\n        <label>\n         Password\n    \n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n        </label>\n       \n        <input type=\"submit\" value=\"Login!\" />\n      </form>\n      {error?<div>{error}</div>:null}\n      <Auth />\n        </>\n    )\n}\n\nexport default Login;\n","import { Route, Switch } from \"react-router-dom\";\n\nimport {useEffect, useState} from 'react'\nimport ProductionContainer from './ProductionContainer'\nimport ProductionForm from './ProductionForm'\nimport Navigation from './Navigation'\nimport ProductionDetail from './ProductionDetail'\nimport Auth from './Auth'\nimport Login from './LogIn'\n\nfunction App() {\n  const [productions, setProductions] = useState([])\n  const [errors, setErrors] = useState(false)\n  const [cart, setCart] = useState([])\n\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    fetch(\"/authorized_user\")\n    .then((res) => {\n      if (res.ok) {\n        res.json()\n        .then((user) => {\n          setIsAuthenticated(true);\n          setUser(user);\n        });\n      }\n    });\n\n    fetch('/productions')\n    .then(res => res.json())\n    .then(setProductions);\n\n  },[]);\n\n  function handlePost(obj){\n      fetch('/productions',{\n        method:'POST',\n        headers: {'Content-Type': 'application/json'},\n        body:JSON.stringify(obj)\n      })\n      .then(res => {\n        if(res.ok){\n          res.json()\n          .then(json =>  setProductions([...productions,json]))\n        } else {\n          res.json()\n          .then(json => {\n          setErrors(Object.entries(json.errors))\n          })\n        }\n      })\n  }\n\n  if (!isAuthenticated) return <Login error={'please login'} setIsAuthenticated={setIsAuthenticated} setUser={setUser} />;\n\n  return (\n    <>\n    <Navigation cart={cart} setIsAuthenticated={setIsAuthenticated} setUser={setUser} user={user}/>\n    <Switch>\n    <Route exact path=\"/\">\n      <ProductionContainer productions={productions}/>\n    </Route>\n    <Route exact path=\"/productions/new\">\n      <ProductionForm handlePost={handlePost} errors={errors} />\n    </Route>\n    <Route exact path=\"/productions/:id\">\n        <ProductionDetail cart={cart} setCart={setCart}/>\n    </Route>\n    <Route path=\"/sign_up\">\n          <Auth />\n    </Route>\n    <Route path=\"/login\">\n          <Login />\n    </Route>\n    </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}